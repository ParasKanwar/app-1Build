{"version":3,"sources":["components/something.jsx","header/LoginHeader.jsx","auth/login.jsx","auth/registration.jsx","App.js","serviceWorker.js","index.js","auth/complainify.png"],"names":["Something","props","state","counter","date","Date","getTime","List","ProgressBar","isLoading","handleClick","bind","progress","class","max","e","this","setState","console","log","localStorage","getItem","className","map","onClick","disabled","React","Component","LoginHeader","src","require","alt","style","fontWeight","fontSize","Login","email","password","isSignUpLoading","isLoginButtonLoading","Disabled","isError","invalidCredentials","onChangeHandler","onSubmitHandler","onSignUpButtonHandler","length","validateData","event","headers","Headers","data","Email","append","options","method","body","JSON","stringify","request","Request","fetch","then","res","a","status","json","ResponseBody","token","setItem","setTimeout","history","push","catch","preventDefault","target","name","value","display","flexDirection","justifyContent","color","fontFamily","width","background","boxShadow","onSubmit","placeholder","onChange","type","marginBottom","marginTop","validator","Registration","age","confirmPassword","passwordClass","exclamation","submitClass","submitState","emailFieldClass","emailFieldAfterRequest","isEmailValid","onBlurHandler","b","validateSubmit","response","message","isSubmitted","default","isEmail","alignItems","onBlur","required","App","exact","path","component","something","login","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","module","exports"],"mappings":"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","file":"static/js/main.b3c577fd.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass Something extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      counter: 1,\r\n      date: new Date().getTime(),\r\n      List: [100],\r\n      ProgressBar: \"Click me\",\r\n      isLoading: null\r\n    };\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.progress = (\r\n      <progress class=\"progress is-small is-primary\" max=\"100\">\r\n        15%\r\n      </progress>\r\n    );\r\n  }\r\n  handleClick(e) {\r\n    this.setState({\r\n      counter: this.state.counter + 1,\r\n      ProgressBar: this.progress,\r\n      isLoading: \"is-loading\"\r\n    });\r\n    console.log(localStorage.getItem(\"token\"));\r\n  }\r\n  render() {\r\n    return (\r\n      <div className={\"container is-fluid\"}>\r\n        <h1>\r\n          Hello This is My Component {this.state.counter} {this.state.date}\r\n        </h1>\r\n        <ul>\r\n          {this.state.List.map(e => (\r\n            <li>{e}</li>\r\n          ))}\r\n        </ul>\r\n        <button\r\n          className={\"button is-primary \" + this.state.isLoading}\r\n          onClick={this.handleClick}\r\n          disabled={!this.state.ProgressBar}\r\n        >\r\n          {\"Click Me\"}\r\n        </button>\r\n        <div className={\"container is-fluid\"}>\r\n          <div className={\"notification\"}>{this.state.ProgressBar}</div>\r\n          <div className={\"notification is-primary\"}>Hello</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Something;\r\n","import React from \"react\";\r\n\r\nconst LoginHeader = props => {\r\n  return (\r\n    <div>\r\n      <img\r\n        src={require(\"../auth/complainify.png\")}\r\n        // style={{ width: 80, height: 90 }}\r\n        className={\"image is-128x128\"}\r\n        alt=\"anonymous\"\r\n      ></img>\r\n      <h1\r\n        style={{\r\n          fontWeight: \"bold\",\r\n          fontSize: 30\r\n          // color: \"#0f0f0f\"\r\n        }}\r\n      >\r\n        {null}\r\n      </h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginHeader;\r\n","import React, { Component } from \"react\";\r\nimport Header from \"../header/LoginHeader\";\r\nexport default class Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      isSignUpLoading: false,\r\n      isLoginButtonLoading: false,\r\n      Disabled: true,\r\n      isError: false,\r\n      invalidCredentials: false\r\n    };\r\n    this.onChangeHandler = this.onChangeHandler.bind(this);\r\n    this.onSubmitHandler = this.onSubmitHandler.bind(this);\r\n    this.onSignUpButtonHandler = this.onSignUpButtonHandler.bind(this);\r\n  }\r\n  validateData() {\r\n    if (\r\n      this.state.password.length > 8 &&\r\n      this.state.email !== \"\" &&\r\n      this.state.Disabled\r\n    ) {\r\n      this.setState({ Disabled: false });\r\n    } else if (\r\n      !this.state.Disabled &&\r\n      (this.state.password.length < 8 || this.state.email === \"\")\r\n    ) {\r\n      this.setState({ Disabled: true });\r\n    }\r\n  }\r\n  componentDidUpdate() {\r\n    this.validateData();\r\n  }\r\n  onSubmitHandler(event) {\r\n    this.setState({ isLoginButtonLoading: true });\r\n    const headers = new Headers();\r\n    const data = { Email: this.state.email, password: this.state.password };\r\n    headers.append(\"content-type\", \"application/json\");\r\n    const options = {\r\n      method: \"POST\",\r\n      headers,\r\n      body: JSON.stringify(data)\r\n    };\r\n    const request = new Request(\r\n      \"http://ec2-52-66-207-229.ap-south-1.compute.amazonaws.com/users/login\",\r\n      options\r\n    );\r\n    fetch(request)\r\n      .then(async res => {\r\n        try {\r\n          if (res.status === 401) {\r\n            this.setState({\r\n              invalidCredentials: true,\r\n              isLoginButtonLoading: false\r\n            });\r\n          }\r\n          const ResponseBody = await res.json();\r\n          if (ResponseBody.token) {\r\n            localStorage.setItem(\"token\", ResponseBody.token);\r\n            setTimeout(() => {\r\n              this.props.history.push(\"/home\");\r\n            }, 1000);\r\n            return;\r\n          }\r\n        } catch (e) {\r\n          this.setState({\r\n            invalidCredentials: true,\r\n            isLoginButtonLoading: false\r\n          });\r\n        }\r\n      })\r\n      .catch(e => {\r\n        this.setState({ isError: true, isLoginButtonLoading: false });\r\n      });\r\n    event.preventDefault();\r\n  }\r\n  onChangeHandler(event) {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n      invalidCredentials: false,\r\n      isError: false\r\n    });\r\n  }\r\n  onSignUpButtonHandler(event) {\r\n    this.setState({ isSignUpLoading: true });\r\n    setTimeout(() => {\r\n      this.props.history.push(\"/registration\");\r\n    }, 500);\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"box\">\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column|row\",\r\n              justifyContent: \"center\"\r\n            }}\r\n          >\r\n            <Header></Header>\r\n          </div>\r\n          <h1\r\n            style={{\r\n              fontSize: 30,\r\n              color: \"gray\",\r\n              fontFamily: \"courier\",\r\n              fontWeight: \"bolder\"\r\n            }}\r\n          >\r\n            Anonimity(LogIn)\r\n          </h1>\r\n        </div>\r\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n          <div\r\n            className={\"notification\"}\r\n            style={{\r\n              width: 350,\r\n              background: \"#ffffff\",\r\n              boxShadow: \"0px 15px 32px -23px\"\r\n            }}\r\n          >\r\n            <form onSubmit={this.onSubmitHandler}>\r\n              <div className=\"field\">\r\n                <div className=\"control\">\r\n                  <input\r\n                    className=\"input\"\r\n                    name=\"email\"\r\n                    placeholder=\"Username\"\r\n                    value={this.state.email}\r\n                    onChange={this.onChangeHandler}\r\n                  ></input>\r\n                </div>\r\n              </div>\r\n              <div className=\"field\">\r\n                <div className=\"control\">\r\n                  <input\r\n                    className=\"input\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    placeholder=\"Password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChangeHandler}\r\n                  ></input>\r\n                </div>\r\n              </div>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  justifyContent: \"center\"\r\n                }}\r\n              >\r\n                <button\r\n                  type=\"submit\"\r\n                  disabled={this.state.Disabled}\r\n                  className={`button is-success is-fullwidth ${\r\n                    this.state.isLoginButtonLoading ? \"is-loading\" : null\r\n                  }`}\r\n                  style={{ marginBottom: 10 }}\r\n                >\r\n                  LogIn\r\n                </button>\r\n                <h1 style={{ fontWeight: \"bolder\", marginBottom: 10 }}>OR</h1>\r\n                <button\r\n                  onClick={this.onSignUpButtonHandler}\r\n                  type=\"button\"\r\n                  className={`button is-info is-outlined is-fullwidth ${\r\n                    this.state.isSignUpLoading ? \"is-loading\" : null\r\n                  }`}\r\n                >\r\n                  SignUp\r\n                </button>\r\n              </div>\r\n            </form>\r\n            {this.state.invalidCredentials ? (\r\n              <div className=\"notification is-danger\" style={{ marginTop: 10 }}>\r\n                <h1>Invalid credentails</h1>\r\n              </div>\r\n            ) : null}\r\n            {this.state.isError ? (\r\n              <div className=\"notification is-danger\" style={{ marginTop: 10 }}>\r\n                <h1>Error Connecting</h1>\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n// import axios from \"axios\";\r\nimport SignUpHeader from \"../header/LoginHeader\";\r\nconst validator = require(\"validator\");\r\n\r\nexport default class Registration extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      age: \"\",\r\n      confirmPassword: \"\",\r\n      passwordClass: \"input\",\r\n      exclamation: null,\r\n      submitClass: \"button is-info is-outlined\",\r\n      submitState: true,\r\n      emailFieldClass: \"input\",\r\n      emailFieldAfterRequest: \"\",\r\n      isLoading: false,\r\n      isEmailValid: false\r\n    };\r\n    this.exclamation = (\r\n      <div>\r\n        <span className=\"icon is-small is-right\">\r\n          <i className=\"fas fa-exclamation-triangle\"></i>\r\n        </span>\r\n        <p className=\"help is-danger\">Password Length Must Be greater Than 8</p>\r\n      </div>\r\n    );\r\n    this.onSubmitHandler = this.onSubmitHandler.bind(this);\r\n    this.onChangeHandler = this.onChangeHandler.bind(this);\r\n    this.onBlurHandler = this.onBlurHandler.bind(this);\r\n    // this.onEmailBlurHandler = this.onEmailBlurHandler.bind(this);\r\n  }\r\n  validateSubmit() {\r\n    if (this.state.submitState) {\r\n      let a = false;\r\n      if (this.state.password.length >= 8) {\r\n        a = this.state.confirmPassword === this.state.password;\r\n      }\r\n      let b = this.state.isEmailValid;\r\n      if (a && b && this.state.name !== \"\") {\r\n        return this.setState({\r\n          submitState: false,\r\n          submitClass: \"button is-info \"\r\n        });\r\n      }\r\n    } else if (!this.state.submitState) {\r\n      let a = false;\r\n      if (this.state.password.length >= 8) {\r\n        a = this.state.confirmPassword === this.state.password;\r\n      }\r\n      let b = this.state.isEmailValid;\r\n      if (!a || !b || this.state.name === \"\") {\r\n        return this.setState({\r\n          submitState: true,\r\n          submitClass: \"button is-info  is-outlined\"\r\n        });\r\n      }\r\n    }\r\n  }\r\n  componentDidUpdate() {\r\n    this.validateSubmit();\r\n  }\r\n  onSubmitHandler(event) {\r\n    this.setState({\r\n      submitClass: \"button is-primary is-loading\"\r\n    });\r\n    const { email, name, password, age } = this.state;\r\n    console.log(localStorage.getItem(\"name\"));\r\n    const data = JSON.stringify({ Email: email, name, password, age });\r\n    const headers = new Headers();\r\n    headers.append(\"content-type\", \"application/json\");\r\n    const options = {\r\n      method: \"POST\",\r\n      headers,\r\n      body: data\r\n    };\r\n    const request = new Request(\r\n      \"http://ec2-52-66-207-229.ap-south-1.compute.amazonaws.com/users\",\r\n      options\r\n    );\r\n    fetch(request)\r\n      .then(async res => {\r\n        try {\r\n          const response = await res.json();\r\n          if (response.token) {\r\n            localStorage.setItem(\"token\", response.token);\r\n            setTimeout(() => {\r\n              this.props.history.push(\"/home\");\r\n            }, 500);\r\n          }\r\n        } catch (e) {\r\n          setTimeout(() => {\r\n            this.setState({\r\n              submitClass: \"button is-warning  is-outlined\"\r\n            });\r\n          }, 1000);\r\n          console.log(e.message);\r\n        }\r\n      })\r\n      .catch(e => {\r\n        this.setState({\r\n          submitClass: \"button is-danger is-outlined\"\r\n        });\r\n        console.log(e.message);\r\n      });\r\n\r\n    // axios\r\n    //   .post(\r\n    //     \"http://localhost:3001/users\",\r\n    //     { Email: email },\r\n    //     {\r\n    //       withCredentials: true,\r\n    //       headers: {\r\n    //         // \"Access-Control-Allow-Origin\": \"*\",\r\n    //         \"Content-Type\": \"application/x-www-form-urlencoded; charset=UTF-8\"\r\n    //       }\r\n    //     }\r\n    //   )\r\n    //   .then(res => {\r\n    //     console.log(res);\r\n    //   })\r\n    //   .catch(e => {\r\n    //     console.log(e.message);\r\n    //   });\r\n    event.preventDefault();\r\n  }\r\n  onChangeHandler(event) {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n    this.setState({ isSubmitted: false });\r\n  }\r\n  onBlurHandler(event) {\r\n    // this.validateSubmit();\r\n    if (event.target.name === \"password\") {\r\n      if (event.target.value.length < 8) {\r\n        return this.setState({\r\n          passwordClass: \"input is-danger\",\r\n          exclamation: this.exclamation\r\n        });\r\n      }\r\n      return this.setState({ passwordClass: \"input\", exclamation: null });\r\n    }\r\n    if (event.target.name === \"email\") {\r\n      const isValidEmail = validator.default.isEmail(event.target.value);\r\n      if (isValidEmail) {\r\n        this.setState({ isLoading: true, emailFieldAfterRequest: null });\r\n        const headers = new Headers();\r\n        headers.append(\"content-type\", \"application/json\");\r\n        const options = {\r\n          method: \"GET\",\r\n          headers\r\n        };\r\n        const request = new Request(\r\n          `http://ec2-52-66-207-229.ap-south-1.compute.amazonaws.com/users/find/${event.target.value}`,\r\n          options\r\n        );\r\n        fetch(request)\r\n          .then(res => {\r\n            setTimeout(() => {\r\n              this.setState({ isLoading: false });\r\n\r\n              if (res.status === 400) {\r\n                this.setState({\r\n                  emailFieldClass: \"input is-danger\",\r\n                  emailFieldAfterRequest: (\r\n                    <div>\r\n                      <span className=\"icon is-small is-right\">\r\n                        <i className=\"fas fa-exclamation-triangle\"></i>\r\n                      </span>\r\n                      <p className=\"help is-danger\">\r\n                        Email Already Taken or Email is Not Valid\r\n                      </p>\r\n                    </div>\r\n                  )\r\n                });\r\n              } else if (res.status === 200) {\r\n                this.setState({\r\n                  isEmailValid: true,\r\n                  emailFieldClass: \"input is-success\",\r\n                  emailFieldAfterRequest: (\r\n                    <span className=\"icon is-small is-right\">\r\n                      <i className=\"fas fa-check\"></i>\r\n                    </span>\r\n                  )\r\n                });\r\n              }\r\n              console.log(res.status);\r\n            }, 1000);\r\n          })\r\n          .catch(e => {\r\n            console.log(e.message);\r\n          });\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column|row\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\"\r\n          }}\r\n        >\r\n          <SignUpHeader />\r\n        </div>\r\n        <div\r\n          className={\"container is-fluid\"}\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column|row\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\"\r\n          }}\r\n        >\r\n          <div\r\n            className={\"box\"}\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column|row\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              marginTop: 10,\r\n              width: 500\r\n            }}\r\n          >\r\n            <div className=\"container\">\r\n              <h1 style={{ marginBottom: 10, fontWeight: \"bold\" }}>Sign Up</h1>\r\n              <form onSubmit={this.onSubmitHandler}>\r\n                <div className={\"field\"}>\r\n                  <input\r\n                    className={\"input\"}\r\n                    type=\"name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Name\"\r\n                    onChange={this.onChangeHandler}\r\n                    value={this.state.name}\r\n                    onBlur={this.onBlurHandler}\r\n                    required\r\n                  ></input>\r\n                </div>\r\n                <div className={\"field\"}>\r\n                  <div\r\n                    className={`control has-icons-right ${\r\n                      this.state.isLoading ? \"is-loading\" : null\r\n                    }`}\r\n                  >\r\n                    <input\r\n                      className={this.state.emailFieldClass}\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      placeholder=\"Email\"\r\n                      onChange={this.onChangeHandler}\r\n                      value={this.state.email}\r\n                      onBlur={this.onBlurHandler}\r\n                      required\r\n                    ></input>\r\n                    {this.state.emailFieldAfterRequest}\r\n                  </div>\r\n                  {this.state.isLoading ? (\r\n                    <progress\r\n                      className=\"progress is-small is-primary\"\r\n                      max=\"100\"\r\n                    >\r\n                      30%\r\n                    </progress>\r\n                  ) : null}\r\n                </div>\r\n                <div className={\"field\"}>\r\n                  <div className={\"control has-icons-right\"}>\r\n                    <input\r\n                      className={this.state.passwordClass}\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      placeholder=\"Password\"\r\n                      onChange={this.onChangeHandler}\r\n                      value={this.state.password}\r\n                      onBlur={this.onBlurHandler}\r\n                      required\r\n                    ></input>\r\n                    {this.state.exclamation}\r\n                  </div>\r\n                </div>\r\n                <div className={\"field\"}>\r\n                  <input\r\n                    className={\"input\"}\r\n                    type=\"number\"\r\n                    name=\"age\"\r\n                    placeholder=\"age\"\r\n                    onChange={this.onChangeHandler}\r\n                    value={this.state.age}\r\n                    required\r\n                  ></input>\r\n                </div>\r\n                <div className={\"field\"}>\r\n                  <input\r\n                    className={\"input\"}\r\n                    type=\"password\"\r\n                    name=\"confirmPassword\"\r\n                    placeholder=\"Confirm Password\"\r\n                    onChange={this.onChangeHandler}\r\n                    value={this.state.confirmPassword}\r\n                    required\r\n                  ></input>\r\n                </div>\r\n                <button\r\n                  disabled={this.state.submitState}\r\n                  className={this.state.submitClass}\r\n                  style={{ marginTop: 20 }}\r\n                  type=\"submit\"\r\n                >\r\n                  Sign Up\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\n// import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport something from \"./components/something\";\nimport login from \"./auth/login\";\nimport { Route } from \"react-router-dom\";\nimport Registration from \"./auth/registration\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Route exact path=\"/registration\" component={Registration}></Route>\n      <Route exact path=\"/home\" component={something}></Route>\n      <Route exact path=\"/\" component={login}></Route>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n// import Registration from \"./auth/registration\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n// import Something from \"./components/something\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/complainify.bc7f0fe6.png\";"],"sourceRoot":""}